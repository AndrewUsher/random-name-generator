{"version":3,"sources":["js/main.js"],"names":["url","list","document","getElementById","createElement","elements","createdElements","map","element","push","append","parent","appendChild","fetch","then","response","json","data","users","results","user","li","img","span","src","picture","medium","textContent","name","first","last","join","catch","error","console"],"mappings":";AAcA,SAAA,EAAA,EAAA,GAAA,OAAA,EAAA,IAAA,EAAA,EAAA,IAAA,IAAA,SAAA,IAAA,MAAA,IAAA,UAAA,wDAAA,SAAA,EAAA,EAAA,GAAA,IAAA,EAAA,GAAA,GAAA,EAAA,GAAA,EAAA,OAAA,EAAA,IAAA,IAAA,IAAA,EAAA,EAAA,EAAA,OAAA,cAAA,GAAA,EAAA,EAAA,QAAA,QAAA,EAAA,KAAA,EAAA,QAAA,GAAA,EAAA,SAAA,GAAA,GAAA,IAAA,MAAA,GAAA,GAAA,EAAA,EAAA,EAAA,QAAA,IAAA,GAAA,MAAA,EAAA,QAAA,EAAA,SAAA,QAAA,GAAA,EAAA,MAAA,GAAA,OAAA,EAAA,SAAA,EAAA,GAAA,GAAA,MAAA,QAAA,GAAA,OAAA,EAbA,IAAMA,EAAM,wCACNC,EAAOC,SAASC,eAAe,SAG/BC,EAAgB,WAAIC,IAClBC,IAAAA,EAAkB,GADAD,EAAAA,UAAAA,OAAAA,EAAa,IAAA,MAAA,GAAA,EAAA,EAAA,EAAA,EAAA,IAAbA,EAAa,GAAA,UAAA,GAG9BC,OADPD,EAASE,IAAI,SAAAC,GAAWF,OAAAA,EAAgBG,KAAKP,SAASE,cAAcI,MAC7DF,GAIHI,EAAS,SAACC,EAAQH,GAAYG,OAAAA,EAAOC,YAAYJ,IAEvDK,MAAMb,GACHc,KAAK,SAAAC,GAAYA,OAAAA,EAASC,SAC1BF,KAAK,SAAAG,GAEGC,OADKD,EAAKE,QACJZ,IAAI,SAAAa,GACShB,IADD,EAAA,EACCA,EAAc,KAAM,MAAO,QAD5B,GAChBiB,EADgB,EAAA,GACZC,EADY,EAAA,GACPC,EADO,EAAA,GAEvBD,EAAIE,IAAMJ,EAAKK,QAAQC,OACvBH,EAAKI,YAAc,CAACP,EAAKQ,KAAKC,MAAOT,EAAKQ,KAAKE,MAAMC,KAAK,KAC1DrB,EAAOW,EAAIC,GACXZ,EAAOW,EAAIE,GACXb,EAAOT,EAAMoB,OAGhBW,MAAM,SAASC,GACdC,QAAQD,MAAMA","file":"main.d544ccf0.map","sourceRoot":"..","sourcesContent":["// Initial variables\nconst url = 'https://randomuser.me/api/?results=32'\nconst list = document.getElementById('users')\n\n// Create element(s) that is passed into parameters\nconst createElement = (...elements) => {\n  const createdElements = []\n  elements.map(element => createdElements.push(document.createElement(element)))\n  return createdElements\n}\n\n// Append second parameter to the first one\nconst append = (parent, element) => parent.appendChild(element)\n\nfetch(url)\n  .then(response => response.json())\n  .then(data => {\n    let users = data.results\n    return users.map(user => {\n      const [li, img, span] = createElement('li', 'img', 'span')\n      img.src = user.picture.medium\n      span.textContent = [user.name.first, user.name.last].join(' ')\n      append(li, img)\n      append(li, span)\n      append(list, li)\n    })\n  })\n  .catch(function(error) {\n    console.error(error)\n  })\n"]}